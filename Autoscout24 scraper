from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By
import time
import pandas as pd

# Ustawienie sterownika
webdriver_service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=webdriver_service)

# Lista stron do przeszukania
pages = ["https://www.autoscout24.pl/lst/toyota/auris/ft_benzyna?atype=C&cy=NL&damaged_listing=exclude&desc=0&ocs_listing=include&powertype=hp&search_id=1iewssa0kvl&sort=standard&source=listpage_pagination&ustate=N%2CU"] \
+ [f"https://www.autoscout24.pl/lst/toyota/auris/ft_benzyna?atype=C&cy=NL&damaged_listing=exclude&desc=0&ocs_listing=include&page={i}&powertype=hp&search_id=1iewssa0kvl&sort=standard&source=listpage_pagination&ustate=N%2CU" \
   for i in range(2, 21)]  # zmień 6 na ilość stron, które chcesz przeszukać

# Lista, która będzie przechowywać wszystkie dane
data = []

for page in pages:
    # Przejście do strony
    driver.get(page)

    time.sleep(1)  # krótka przerwa, żeby strona mogła się załadować

    # Znalezienie wszystkich ofert na stronie
    for i in range(1, 21):  # iteracja przez 20 artykułów na stronie
        try:
            # Pobranie informacji z oferty
            offer = driver.find_element(By.XPATH, f'/html/body/div[1]/div[3]/div/div/div/div[5]/div[2]/main/article[{i}]/div[1]/div[2]/a/h2/span')
            price = driver.find_element(By.XPATH, f'/html/body/div[1]/div[3]/div/div/div/div[5]/div[2]/main/article[{i}]/div[1]/div[3]/div[1]')
            features = driver.find_element(By.XPATH, f'/html/body/div[1]/div[3]/div/div/div/div[5]/div[2]/main/article[{i}]/div[1]/div[3]/div[2]')

            # Pobranie wszystkiego tekstu z oferty i informacji
            offer_text = offer.text
            price_text = price.text
            features_text = features.text

            # Dodanie pobranych danych do listy
            data.append([offer_text, price_text, features_text])
        except:
            continue  # jeżeli nie można znaleźć oferty lub pobrać tekstu, pomiń tę ofertę

driver.quit()

# Konwersja listy do ramki danych pandas
df = pd.DataFrame(data, columns=['Offer', 'Price', 'Features'])

# Zapisanie ramki danych do pliku Excela
df.to_excel('C:/Users/Albert Stawicki/Desktop/Magisterka/autoscout24_NL_Auris1.6.xlsx', index=False)
