from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By
import time
import pandas as pd

# Ustawienie sterownika
webdriver_service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=webdriver_service)

# Lista stron do przeszukania
pages = ["https://www.otomoto.pl/osobowe/toyota/yaris?search%5Bfilter_enum_fuel_type%5D=hybrid"] \
+ [f"https://www.otomoto.pl/osobowe/toyota/yaris?search%5Bfilter_enum_fuel_type%5D=hybrid&page={i}" \
   for i in range(2, 14)]  # zmień 9 na ilość stron, które chcesz przeszukać

# Lista, która będzie przechowywać wszystkie dane
data = []

for page in pages:
    # Przejście do strony
    driver.get(page)

    # Zamknięcie okienka z ciasteczkami
    try:
        cookie_consent_button = driver.find_element(By.ID, 'onetrust-accept-btn-handler')
        cookie_consent_button.click()
    except:
        pass  # jeżeli nie można znaleźć przycisku, pomiń zamknięcie okienka

    time.sleep(2)  # krótka przerwa, żeby strona mogła się załadować

    # Znalezienie wszystkich ofert na stronie
    for i in range(1, 33):  # iteracja przez 32 artykuły na stronie
        try:
            # Pobranie informacji z oferty
            offer = driver.find_element(By.XPATH, f'/html/body/div[1]/div/div/div/div[1]/div[2]/div[2]/div[1]/div[3]/main/article[{i}]/section/div[2]')
            info1 = driver.find_element(By.XPATH, f'/html/body/div[1]/div/div/div/div[1]/div[2]/div[2]/div[1]/div[3]/main/article[{i}]/section/div[3]/dl[1]')
            info2 = driver.find_element(By.XPATH, f'/html/body/div[1]/div/div/div/div[1]/div[2]/div[2]/div[1]/div[3]/main/article[{i}]/section/div[4]/div[2]/div[1]')

            # Pobranie wszystkiego tekstu z oferty i informacji
            offer_text = offer.text
            info1_text = info1.text
            info2_text = info2.text

            # Dodanie pobranych danych do listy
            data.append([offer_text, info1_text, info2_text])
        except:
            continue  # jeżeli nie można znaleźć oferty lub pobrać tekstu, pomiń tę ofertę

driver.quit()

# Konwersja listy do ramki danych pandas
df = pd.DataFrame(data, columns=['Offer', 'Info1', 'Info2'])

# Zapisanie ramki danych do pliku Excela
df.to_excel('C:/Users/Albert Stawicki/Desktop/Magisterkaoutput.xlsx', index=False)
